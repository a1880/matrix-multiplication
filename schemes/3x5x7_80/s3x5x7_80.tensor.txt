# Matrix multiplication scheme in tensor form: 's3x5x7_80.tensor.txt'
# 
# Created: 2025-05-23 23:45
# 
# [c] is processed in transposed form
# 
# Coefficients: {-2.0, -1.0, 1.0, 2.0}
# 
# Algorithm is valid!
# Fulfilled Brent Equations: 11,025
# 

(- a12 - a14 + a15 - a25)*(- b13 + b17 + b43 - b54 + b56)*(- c31 - c32 + c42 - c72)
(- a12 - a34)*(b24 + b47)*(c21 - c41 - c73)
(a13 - a15 + a25)*(b13 - b17 + b22 + b24 - b25 - b32 + b33 - b34 + b35 - b37 - b42 - b43 - b44 + b45 + b46 - b52 + b55)*(c31 + c52)
(a13 - a31 + a32)*(- b25 + b37)*(c31 + c61 + c71 - c53)
(- a23)*(- b33 + b37)*(c32 - c52 - c33)
(a21 - a22)*(b22 - b23 - b32 + b37 - b42 - b52)*(- c22 - c52 - c62)
(- a23 + a31 - a32 - a33)*(- b23 + b37)*(- c22 - c32 - c52 - c62 - c72 + c33)
(- a22 - a23)*(b32 - b37)*(- c22 - c52 + c23)
(- a12 - a14 + a15 - a35)*(- b11 + b41 + b54 - b56)*(- c11 - c13 - c43 + c73)
(a33 - a34)*(- b34)*(c42 + c52 - c43 - c53)
(- a24 + a25)*(b52)*(c21 - c12 + c22)
(- a12)*(- b26 + b27 - b47 - b54 + b56 - b57)*(- c31 - c71 - c73)
(- a11 + a12 + a13)*(b25)*(c21 + c31 + c51 + c61 + c71)
(a12 + a14 - a15 - a24 + a25)*(b13 - b17 - b43)*(- c21 + c32 - c42 + c72)
(- a11 - a14 + a15 + a21 + a24 - a25)*(b12 - b13 + b14 - b15 + b17)*(c42 + c62)
(a13 - a15 - a23 + a25)*(- b32 + b33 - b34 + b35 - b37)*(- c52)
(- a31 - a34 + a35)*(- b11)*(c13 - c43 - c63)
(- a12 - a15)*(b54 - b56 + b57)*(c11 - c71 - c72)
(a21 + a23 + a31 + a33)*(b13 + b14 - b16 - b22 + b23 + b32 - b37 + b42 + b52)*(- c62)
(a11 + a13 - a31 - a33)*(- b15 - b25)*(- c21 - c51 + c61)
(a25)*(b53 + b54 - b56)*(c31 + c12 + c32)
(- a22 - a23 - a33 + a34)*(b11 + b24 - b41 - b42)*(- c42 - c52 - c23)
(- a13)*(- b25 + b35 + b36 - b37 + b45 + b55)*(c31 - c51 - c53)
(a12 + a14)*(- b47 + b54 - b56)*(c41 - c71)
(- a21 - a24)*(- b13 + b17)*(c32 - c52 + c62)
(- a23 - a31 - a33)*(- b13 - b14 + b16 - b23 + b26 - b36 + b37)*(c62 + c33)
(- a22 - a24)*(- b11 + b41 + b42)*(- c12 - c42 - c52)
(- a12 - a15 + a25)*(- b13 + b17 - b23 + b27 + b43 - b47 - b54 + b56 - b57)*(c31 - c72)
(- a21)*(- b12 + b13 + b15 - b17)*(- c42 - c52 - c62)
(- a23 - a33 + a34)*(b24 - b34 - b43 - b44 + b46)*(c42 + c52 - c33)
(a13 - a34)*(b34 + b45)*(- c21 + c41 - c53)
(- a11 - a14)*(b46 + b56)*(- c31 - c41 - c61 - c43 - c63)
(a23 - a25 + a33 - a35)*(b11 + b51 + b52 - b53 - b54 + b56)*(- c12)
(a32 + a34)*(b11 + b24 - b41)*(c23 + c43 - c73)
(a13 - a33)*(- b15 - b25 - b31 - b34 + b35 - b37)*(- c53)
(a22 + a24)*(- b42 - b52)*(c12 - c22 - c52)
(- a22 - a23 - a32 - a33)*(b12 + b21 + 2*b22 - b24 - b26 - b32 + b37 - b42 - b52)*(- c23)
(a11 + a14 - a15 - a24 + a25)*(- b12 - b14 + b15 + b46)*(- c21 - c42 - c62)
(a13 - a31 - a33)*(b15 + b25 + b36 - b37)*(- c21 - c51 + c61 - c53)
(- a15 + a35)*(- b11 + b41 + b51 + b54 - b55 + b57)*(- c11)
(a33 - a35)*(b31)*(- c12 + c13 + c53)
(- a12 - a14 + a15)*(- b54 + b56)*(- c11 + c31 - c41 + c71 + c32 - c42 + c72 - c13 - c43 + c73)
(a14 - a34)*(b14 - b44 + b45 - b47)*(c21 - c41)
(- a13 + a14)*(- b45)*(- c41 - c51)
(a21 + a24 - a25)*(b11)*(c12)
(- a12 - a15 - a24 + a25)*(b13 - b17 + b22 + b24 - b25 - b43 + b47)*(- c21 - c72)
(a15 - a25)*(b22 - b23 + b24 - b25 + b27 - b32 + b33 - b34 + b35 - b37 - b42 + b43 - b44 + b45 - b47 - b52 + b53 - b54 + b55 - b57)*(c31)
(a13 - a35)*(b31 + b55)*(c11 - c53)
(a32 + a35)*(b11 + b21 - b41)*(c13 - c23 - c73)
(- a21)*(- b12 + b17 - b22 + b23 + b32 - b37 + b42 + b52)*(- c32 - c62 - c72)
(a11 + a14 - a31 - a34)*(- b11 - b14)*(c43 + c63)
(- a13 + a15 + a24 - a25)*(- b13 + b17 - b22 - b24 + b25 + b42 + b43 + b44 - b45 - b46 + b52)*(c21 - c52)
(- a35)*(b21 - b31 - b41 - b51 + b54 - b56)*(c11 + c13 + c33)
(- a31 + a32 + a33)*(- b37)*(c22 + c32 + c52 + c62 + c72 - c23 - c33 - c53 - c63 - c73)
(- a11 - a14 + a35)*(- b11 + b56)*(c11 + c43 + c63)
(- a21 + a22 + a23 - a31 + a32 + a33)*(b12 + b22 - b23 - b32 + b37 - b42 - b52)*(- c22 - c32 - c52 - c62 - c72)
(- a31 + a32)*(- b26 + b37)*(- c31 - c61 - c71 - c23 - c63 - c73)
(- a34)*(- b24 + b34 + b44 - b46)*(c21 - c41 + c33 - c43)
(- a12 - a35)*(- b11 - b21 + b41 - b54 + b56 - b57)*(c11 + c73)
(a31 + a33)*(- b36 + b37)*(c21 + c51 - c61 + c62 + c53 - c63)
(- a13 + a15)*(- b55)*(- c11 - c51 - c52)
(a11)*(b15 + b16 - b17 + b25 - b46)*(c61)
(a23 + a33 - a35)*(- b21 + b31 + b41 + b51 - b53 - b54 + b56)*(c12 + c33)
(a23 - a24 + a33 - a34)*(b11 - b41 - b42 + b43 + b44 - b46)*(- c42 - c52)
(a11 + a14 - a15)*(- b56)*(- c11 + c41 + c61 + c42 + c62)
(a22 + a23 + a33 - a35)*(- b11 - b21 + b41 - b52)*(- c12 + c23)
(a14 - a15 - a24 + a25)*(b12 - b13 + b14 - b15 + b17 - b42 + b43 - b44 + b45 - b47)*(- c21)
(- a12 - a31 + a32)*(- b17 - b26)*(c31 + c61 + c71 + c73)
(- a22 - a23 - a31 - a33)*(b22 - b26 - b32 + b37 - b42 - b52)*(c62 + c23)
(a22 + a24)*(- b22 - b24 + b25)*(c52 + c72)
(a12 + a15 - a22 - a25)*(- b22 + b23 - b24 + b25 - b27)*(c72)
(a12 - a32)*(b11 + b17 + b21 + b24 + b27 - b41)*(- c73)
(a31)*(- b14 + b16 + b26 - b36 + b37)*(c33 + c63)
(- a23 - a33)*(- b13 - b14 + b16 + b21 - 2*b23 - b24 + b26 - b31 + b33 + b34 - b36 + b37 - b41 + b43 + b44 - b46 - b51 + b53 + b54 - b56)*(- c33)
(- a12 - a14 + a15 + a32 + a34 - a35)*(b11 - b41)*(- c13 - c43 + c73)
(- a11 - a14 + a34)*(b14 - b46)*(c21 - c41 - c43 - c63)
(a11 + a14 - a15 + a25)*(- b13 + b17 + b46 + b56)*(- c31 + c42 + c62)
(- a22 - a23 + a31 - a32 - a33)*(- b12 - b22 + b32 - b37 + b42 + b52)*(c22 + c32 + c52 + c62 + c72 - c23)
(- a13)*(b13 - b17 + b22 + b24 - b32 - b34 - b36 + b37 - b42 - b43 - b44 + b46 - b52)*(c21 + c31)
(a11 - a12 - a31 + a32)*(- b17 - b25)*(- c31 - c61 - c71)

# end of file 's3x5x7_80.tensor.txt', lines: 95

