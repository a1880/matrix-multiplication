#
# File 's4x5x6_90.tensor.txt'
#
# Solution for the 4x5x6_90 matrix multiplication problem in tensor format
# Transposed form C = (A*B)^T
#
# Created: 24-May-2025 19:37:40
#
(a41 + a44)*(- b11 - b12 - b14 + b15 + b16 + b26 + b36 + b56)*(c34)
(a44)*(- b11 - b12 - b14 + b15 + b16 + b41 + b42 + b44 - b45 - b46)*(c41 + c44)
(a21 - a31 - a32 - a34)*(b15 - b21 + b23 - b25 + b35 - b55)*(- c33)
(a24)*(b21 - b23 + b25 - b31 + b33 - b35 - b41 + b43 - b45 + b51 - b53 + b55)*(c31 + c32 - c42)
(a31)*(b16)*()
(a12)*(b21 + b22)*(c21 - c24)
(a11)*(b16 - b46)*(c31 + c34 + c41 + c44)
(a31 - a33 + a34)*(b11)*(c11 + c12 + c13)
(a11 + a14 - a24)*(b12 + b13 - b16 + b46)*(c31)
(- a12 + a22 - a42 + a45)*(b22 + b32 + b52 + b53)*(c22 + c34)
(a12 + a14)*(b35 + b45 - b55)*(c41 + c44)
(a21 - a31 - a34)*(b14 - b21 + b23 - b25 + b31 - b33 + b35 + b41 - b43 - b44 + b45 - b51 + b53 - b55)*(c33 + c42)
(a12 - a13 + a42 - a43)*(b32)*(c11 + c12 + c13 - c21 + c31 + c32 + c33)
(a14 + a15)*(b42 + b51 - b55)*(c21 + c24 - c31 - c34 - c41 - c44)
(- a22 + a23 + a32 - a33)*(b36 + b56)*()
(a34 + a35)*(b12 - b52 + b56)*(- c23)
(a12 - a15 - a23 + a25 - a32 + a33 + a42 - a45)*(b32 + b56)*(c23)
(- a12 + a22 - a42 + a43)*(b21 + b33)*(c12 + c32 + c34)
(- a12 + a32 - a42 + a43)*(b21 - b32 + b36)*(c13 + c33)
(- a11 + a31 + a32 + a34 + a41)*(- b15 + b24 - b35 + b55)*(c42 + c43 - c44)
(a11 + a44)*(b11 + b12 + b14 - b15 - b16 + b46)*(c34 + c41 + c44)
(a12 - a32)*(b21 + b22 - b26)*(c33)
(a21 - a31 + a33 - a34)*(b11 + b31 - b33 - b51)*(c12 - c33)
(- a13 + a34)*(b31 + b32 - b36 + b41 - b51)*(c13 + c33)
(a34)*(b14 - b44)*(c33 - c43)
(a11 - a31 + a33 - a34)*(b11 + b35 - b51)*(c11 + c14 + c42 + c43 - c44)
(a23 - a25 - a33 + a35)*(b56)*(c23)
(a13 + a15 - a23 - a25)*(b35)*(c11)
(a11 - a41)*(b11 + b12 + b14 - b15)*(- c34 + c42 + c43 - c44)
(- a11 - a14 - a15 + a25 + a31 + a34 + a41 + a44 + a45)*(b24 - b34 + b54)*(c42)
(a15 + a34)*(b42 - b52 + b56)*(c23)
(- a21 + a31 + a34 + a35)*(b12 + b53)*(- c22 + c32 + c33)
(a21 + a24 - a31 - a34)*(b21 - b23 + b25 - b31 + b33 - b35 - b41 + b43 + b44 - b45 + b51 - b53 + b55)*(c42)
(a11 + a14 - a34)*(b46)*()
(a42 - a43)*(b21)*(- c11 + c14 + c21 - c24 - c31 + c34)
(- a11 + a31 - a33 + a34 + a41)*(b11 - b34 + b35 - b51)*(c14 + c42 + c43 - c44)
(a12 + a24)*(- b21 + b23 - b25 + b35 + b45 - b55)*(c31 + c32)
(a14 + a15 - a44)*(b42 + b51 + b54 - b55)*(- c24 + c34 + c41 + c44)
(a13)*(b31 + b32 + b41 - b51)*(c11 + c12 + c13 + c31 + c32 + c33)
(a12 + a34)*(- b21 - b22 - b25 + b26 + b35 + b45 - b55)*(c33)
(a15)*(- b42 + b52)*(c21 + c22 + c23)
(a13 - a14 + a44)*(b34 - b35 - b41 + b51)*(- c14 + c41 + c44)
(a11 - a12 + a14 - a21 + a22 - a24 + a41 - a42 + a44)*(b12 + b13 - b16)*()
(- a11 - a14 - a15 + a23 + a25 + a31 - a33 + a34 + a41 + a44 + a45)*(b34 - b35 + b51)*(c14 + c42 - c44)
(a43 + a45)*(b35)*(c14)
(- a11 - a14 - a15 + a31 + a34 + a35 + a41 + a44 + a45)*(b51 + b54 - b55)*(- c24 + c34 - c42 + c44)
(a33 + a35)*(b51)*(c13)
(a13 + a15 - a23 - a25 - a43 - a45)*(b34)*(c14 - c44)
(a45)*(b22 + b32 + b51 + b52 + b54 - b55)*(c24 - c34)
(a12 - a22)*(b21 - b23)*(c32 + c34)
(a12 - a13 - a32 + a33 + a42 - a43)*(- b32 + b36)*(c13 + c33)
(a21 + a24 + a25 - a31 - a34 - a35)*(b53)*(- c22 + c32)
(- a11 - a14 - a15 - a22 + a25 + a31 + a32 + a34 + a41 + a44 + a45)*(b24 - b35 + b55)*(- c42 + c44)
(a15 + a24)*(b42 + b53)*(c22 + c31)
(a21)*(b12 + b13)*(c32 + c33)
(- a11 + a31 + a34 + a35 + a41)*(b12 + b51 + b54 - b55)*(c24 - c34 + c42 + c43 - c44)
(a12 + a42 - a43)*(b21 - b32)*(c11 + c12 + c13 - c21 + c24 + c31 + c32 + c33)
(a13 - a24)*(- b31 + b33 - b41 + b51)*(c12 + c31 + c32)
(a21 + a22 + a24 - a31 - a32 - a34)*(b21 - b23 + b25 - b35 + b55)*()
(a42)*(- b24 + b25)*()
(- a13 + a14)*(b35 + b41 - b51)*(c11 + c14 - c41 - c44)
(- a11)*(b11 + b12 - b15)*(c41 + c42 + c43)
(a12 - a22 + a42)*(b12 + b13 - b16 + b22 + b23 - b26 + b32 + b33 - b36 + b52 + b53 - b56)*(c34)
(a12)*(b25 - b35 - b45 + b55)*(c31 + c32 + c33)
(a11 + a14 + a15 - a31 - a34 - a35)*(- b51 + b55)*(c21 + c24 - c31 - c34 + c42 - c44)
(a23 + a25)*(b51)*(c11 + c12)
(a12 + a14 - a44)*(b24 - b35 - b45 + b55)*(c41 + c44)
(a34)*(b21 + b22 + b25 - b26 - b31 - b32 - b35 + b36 - b41 - b42 - b45 + b46 + b51 + b52 + b55 - b56)*()
(a44)*(- b12 - b13 + b16 + b42 + b43 - b46)*(c34)
(a12 - a32 - a41 + a42 - a44)*(b26 + b36 + b56)*()
(- a11 - a14 - a15 + a23 + a25 + a31 - a33 + a34)*(b35 - b51)*(c11 + c14 + c42 - c44)
(- a11 + a31 + a34 + a41)*(b14 - b24 + b34 - b54)*(c42 + c43)
(- a14 + a24)*(b12 + b13 - b16 - b42 - b43 + b46)*(c31)
(a31 + a34 + a35)*(b12)*(c21 + c22 + c23 - c31 - c32 - c33)
(- a11 + a31 + a32 + a34)*(b15 + b35 - b55)*(c42 + c43 - c44)
(- a12 + a32 - a42 + a45)*(b22 + b32 + b56)*(c23)
(a43)*(b21 + b31 + b34 - b35)*(c14)
(a12 + a42 - a45)*(b22 + b32)*(c22 + c23 + c24)
(a12 - a15 - a22 + a25 + a42 - a45)*(b32 + b52 + b53)*(c22)
(a21 - a31)*(b11 - b13 - b14 + b15 - b41 + b43 + b44 - b45)*(c33)
(a32 + a34)*(- b15 + b21 + b22 + b25 - b26 - b35 + b55)*(c33)
(- a12 + a22 + a41 - a42 + a44)*(- b12 - b13 + b16 + b26 + b36 + b56)*(- c34)
(a11 - a31 - a34 - a35)*(b12 + b51 - b55)*(c21 + c24 - c31 - c34 + c42 + c43 - c44)
(- a12 + a15 + a23 - a25 - a42 + a45)*(b32)*(c22 + c23)
(a11 + a14 + a15 + a22 - a25 - a31 - a32 - a34)*(b35 - b55)*(c42 - c44)
(a33 - a34)*(b11 + b31 + b32 - b36 - b51)*(c13 + c33)
(a21 - a23 + a24 - a31 + a33 - a34)*(- b31 + b33 + b51)*(c12)
(a14 - a44)*(- b24 + b34 + b44 - b54)*(c41)
(a12 - a13 - a22 + a23 + a42 - a43)*(b33)*(c12 + c32)
(- a12 + a15 + a22 - a25 + a42 - a45)*(b24)*(c44)

#
