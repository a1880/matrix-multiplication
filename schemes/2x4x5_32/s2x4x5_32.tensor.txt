# Matrix multiplication scheme in tensor form: 's2x4x5_32.tensor.txt'
# 
# Created: 2025-05-23 22:50
# 
# [c] is processed in transposed form
# Algorithm is valid!
# Fulfilled Brent Equations: 1,600
# 

(0.5*a12 - 0.5*a14 - 0.5*a22 + 0.5*a24)*(0.5*b11 + 0.5*b12 + 0.5*b13 - 0.5*b14 + 0.5*b21 + 0.5*b22 - 0.5*b23 + 0.5*b24 - b35 - b42 + b43 - b45)*(- c22 - 0.5*c52)
(0.5*a11 - 0.5*a12 + 0.5*a21 - 0.5*a22)*(-2.0*b21)*(0.5*c11 + 0.5*c21 + 0.5*c12 + 0.5*c22)
(-0.5*a13 + 0.5*a14 + 0.5*a23 - 0.5*a24)*(2.0*b44)*(0.5*c11 + 0.5*c41 - 0.5*c12 - 0.5*c42)
(0.5*a11 + 0.5*a12 - a14 + 0.5*a21 - 0.5*a22)*(b12 + b15 + b21 - b25 - 0.5*b31 + 0.5*b32 - 0.5*b33 + 0.5*b34 - 0.5*b41 - 0.5*b42 + 0.5*b43 + 0.5*b44)*(0.5*c11 + 0.5*c21 - 0.5*c12 + 0.5*c22 + 0.5*c52)
(0.5*a13 + 0.5*a14)*(2.0*b32)*(c21 + c31)
(0.5*a12 - 0.5*a13 - 0.5*a22 + 0.5*a23)*(-0.5*b11 + 0.5*b12 - 0.5*b13 + 0.5*b14 - b15 - 0.5*b21 + 0.5*b22 - 0.5*b23 + 0.5*b24 - b25 + 0.5*b31 - 0.5*b32 + 0.5*b33 - 0.5*b34 + b35 + 0.5*b41 - 0.5*b42 + 0.5*b43 - 0.5*b44 + b45)*(- c31 - 0.5*c51)
(0.5*a11 - 0.5*a12 - 0.5*a21 + 0.5*a22)*(2.0*b12)*(0.5*c11 + 0.5*c21 - 0.5*c12 - 0.5*c22)
(-0.5*a22 + 0.5*a23)*(- b13 + b23 - b33 + b43)*(- c31 - 0.5*c51 - c32 - 0.5*c52)
(-0.5*a11 - 0.5*a14 - 0.5*a21 - 0.5*a24)*(b11 + b21 + b31 + b41)*(- c12 - 0.5*c52)
(-0.5*a11 - 0.5*a12)*(2.0*b24)*(- c31 - c41)
(0.5*a22 + 0.5*a23)*(b13 - b23 - b33 + b43)*(- c31 + 0.5*c51 - c32 + 0.5*c52)
(-0.5*a11 + 0.5*a13 + 0.5*a21 - 0.5*a23)*(b13 - b14 - b15 - b25 + 0.5*b31 + 0.5*b32 - 0.5*b33 + 0.5*b34 + 0.5*b41 - 0.5*b42 + 0.5*b43 + 0.5*b44)*(- c42 - 0.5*c52)
(-0.5*a12 - 0.5*a13 + 0.5*a22 + 0.5*a23)*(0.5*b11 - 0.5*b12 + 0.5*b13 - 0.5*b14 - b15 + 0.5*b21 - 0.5*b22 + 0.5*b23 - 0.5*b24 - b25 + 0.5*b31 - 0.5*b32 + 0.5*b33 - 0.5*b34 - b35 + 0.5*b41 - 0.5*b42 + 0.5*b43 - 0.5*b44 - b45)*(- c31 + 0.5*c51)
(0.5*a12 - 0.5*a14 - 0.5*a22 - 0.5*a23)*(-0.5*b11 + 0.5*b12 - 0.5*b13 + 0.5*b14 - 0.5*b21 + 0.5*b22 + 0.5*b23 - 0.5*b24 + b32 + b35 - b43 + b45)*(c31 - 0.5*c51 - c22 - 0.5*c52)
(0.5*a11 + 0.5*a13)*(0.5*b11 - 0.5*b12 - 0.5*b13 - 0.5*b14 + 0.5*b21 - 0.5*b22 + 0.5*b23 + 0.5*b24 + b31 - b34 + b35 - b45)*(- c41 + 0.5*c51 - c42 + 0.5*c52)
(0.5*a12 + 0.5*a14)*(- b15 + b21 - b22 + b25 + 0.5*b31 + 0.5*b32 + 0.5*b33 - 0.5*b34 + 0.5*b41 - 0.5*b42 - 0.5*b43 - 0.5*b44)*(- c21 + 0.5*c51 - c22 + 0.5*c52)
(0.5*a11 + 0.5*a13 + 0.5*a22 - 0.5*a23)*(- b13 - b15 + b24 - b25 + 0.5*b31 + 0.5*b32 - 0.5*b33 - 0.5*b34 + 0.5*b41 - 0.5*b42 + 0.5*b43 - 0.5*b44)*(- c31 - 0.5*c51 + c42 - 0.5*c52)
(- a11 - 0.5*a13 - 0.5*a14 + 0.5*a23 - 0.5*a24)*(-0.5*b11 + 0.5*b12 + 0.5*b13 - 0.5*b14 - 0.5*b21 + 0.5*b22 - 0.5*b23 + 0.5*b24 - b31 - b35 - b44 + b45)*(0.5*c11 + 0.5*c41 - 0.5*c12 + 0.5*c42 - 0.5*c52)
(-0.5*a11 + 0.5*a13 - 0.5*a22 - 0.5*a23)*(b13 - b15 - b24 - b25 + 0.5*b31 + 0.5*b32 - 0.5*b33 - 0.5*b34 + 0.5*b41 - 0.5*b42 + 0.5*b43 - 0.5*b44)*(- c31 + 0.5*c51 + c42 + 0.5*c52)
(-0.5*a12 - 0.5*a14 + 0.5*a22 + 0.5*a24)*(0.5*b11 + 0.5*b12 + 0.5*b13 - 0.5*b14 + 0.5*b21 + 0.5*b22 - 0.5*b23 + 0.5*b24 - b35 + b42 - b43 - b45)*(c22 - 0.5*c52)
(-0.5*a11 - 0.5*a14)*(-0.5*b11 + 0.5*b12 - 0.5*b13 + 0.5*b14 - b15 + 0.5*b21 - 0.5*b22 + 0.5*b23 - 0.5*b24 + b25 + 0.5*b31 - 0.5*b32 + 0.5*b33 - 0.5*b34 + b35 - 0.5*b41 + 0.5*b42 - 0.5*b43 + 0.5*b44 - b45)*(c11 + 0.5*c51 - c12 - 0.5*c52)
(-0.5*a13 + 0.5*a14 - 0.5*a23 + 0.5*a24)*(2.0*b31)*(-0.5*c11 - 0.5*c41 - 0.5*c12 - 0.5*c42)
(0.5*a11 - 0.5*a13)*(-0.5*b11 + 0.5*b12 + 0.5*b13 + 0.5*b14 - 0.5*b21 + 0.5*b22 - 0.5*b23 - 0.5*b24 + b31 - b34 - b35 + b45)*(c41 + 0.5*c51 + c42 + 0.5*c52)
(0.5*a12 + 0.5*a14 - 0.5*a22 + 0.5*a23)*(-0.5*b11 + 0.5*b12 - 0.5*b13 + 0.5*b14 - 0.5*b21 + 0.5*b22 + 0.5*b23 - 0.5*b24 - b32 + b35 + b43 + b45)*(c31 + 0.5*c51 - c22 + 0.5*c52)
(-0.5*a11 - 0.5*a12 - a14 - 0.5*a21 + 0.5*a22)*(- b12 + b15 - b21 - b25 - 0.5*b31 + 0.5*b32 - 0.5*b33 + 0.5*b34 - 0.5*b41 - 0.5*b42 + 0.5*b43 + 0.5*b44)*(0.5*c11 + 0.5*c21 - 0.5*c12 + 0.5*c22 - 0.5*c52)
(0.5*a11 + 0.5*a13 - 0.5*a21 - 0.5*a23)*(b13 - b14 + b15 + b25 - 0.5*b31 - 0.5*b32 + 0.5*b33 - 0.5*b34 - 0.5*b41 + 0.5*b42 - 0.5*b43 - 0.5*b44)*(c42 - 0.5*c52)
(- a11 + 0.5*a13 + 0.5*a14 - 0.5*a23 + 0.5*a24)*(0.5*b11 - 0.5*b12 - 0.5*b13 + 0.5*b14 + 0.5*b21 - 0.5*b22 + 0.5*b23 - 0.5*b24 - b31 + b35 - b44 - b45)*(-0.5*c11 - 0.5*c41 + 0.5*c12 - 0.5*c42 - 0.5*c52)
(0.5*a21 + 0.5*a22)*(-2.0*b13)*(- c32 - c42)
(0.5*a11 - 0.5*a14 + 0.5*a21 - 0.5*a24)*(- b11 - b21 + b31 + b41)*(- c12 + 0.5*c52)
(-0.5*a23 - 0.5*a24)*(2.0*b43)*(- c22 - c32)
(0.5*a11 - 0.5*a14)*(0.5*b11 - 0.5*b12 + 0.5*b13 - 0.5*b14 - b15 - 0.5*b21 + 0.5*b22 - 0.5*b23 + 0.5*b24 + b25 + 0.5*b31 - 0.5*b32 + 0.5*b33 - 0.5*b34 - b35 - 0.5*b41 + 0.5*b42 - 0.5*b43 + 0.5*b44 + b45)*(c11 - 0.5*c51 - c12 + 0.5*c52)
(0.5*a12 - 0.5*a14)*(- b15 - b21 + b22 + b25 + 0.5*b31 + 0.5*b32 + 0.5*b33 - 0.5*b34 + 0.5*b41 - 0.5*b42 - 0.5*b43 - 0.5*b44)*(c21 + 0.5*c51 + c22 + 0.5*c52)

# end of file 's2x4x5_32.tensor.txt', lines: 44

