# Matrix multiplication scheme in tensor form: 's3x4x6_54.tensor.txt'
# 
# Created: 2025-05-23 23:10
# 
# [c] is processed in transposed form
# Algorithm is valid!
# Fulfilled Brent Equations: 5,184
# 

(0.5*a11 + 0.5*a12 - 0.5*a13 - 0.5*a21 - 0.5*a22 + 0.5*a23)*(- b14 - b21 - b24 + b31 - b41)*(c42 - c62)
(a13 + a14 + a33 + a34)*(-0.5*b22 + 0.5*b32 + b36 + 0.5*b42)*(c21)
(- a21 + a31)*(- b12 + b13 - b14 - b16 + b22 - b23 - b34 - b36 - b44 - b46)*(c33)
(-0.5*a21 - 0.5*a22 - 0.5*a24 + 0.5*a31 + 0.5*a32 + 0.5*a34)*(- b11 + b15 + b22 - b23 - b31 + b32 - b33 + b35 - b41 + b42 - b43 + b45)*(- c13)
(- a11 + a12 - a14 - a31 + a32 - a34)*(- b25 - b26 + b35 - b36 + b45 + b46)*(-0.5*c61)
(a11 + a12 + a14 + a31 - a32 + a34)*(- b14 - b26 - b34 - b36 - b44 - b46)*(-0.5*c61 - 0.5*c43 + 0.5*c63)
(- a21 + a22 + a24)*(0.5*b14 + 0.5*b34 - 0.5*b44)*(c22 + c32 - c42 - c43)
(a11 + a12 - a14 + a23 + a24)*(b21 - b25 + b31 + b35 - b41 + b45)*(0.5*c11 + 0.5*c12 + 0.5*c52)
(- a11 + a12 + a14 - a31 + a32 + a34)*(- b12 - b25 - b32 + b35 + b42 - b45)*(0.5*c23 + 0.5*c33)
(- a21 + a22 + a24 + a33 - a34)*(0.5*b11 - 0.5*b15 - 0.5*b21 + 0.5*b25 - b34 - b36)*(c52 - c43)
(- a21 - a22 - a24 - a33 + a34)*(- b11 + b15 + b25 - b31 + b41)*(-0.5*c52 + 0.5*c13)
(- a21 + 0.5*a31 + 0.5*a32 - 0.5*a33)*(- b12 - b23 - b32 + b33 + b42 - b43)*(c22 - c33)
(0.5*a11 + 0.5*a12 + 0.5*a14 + 0.5*a31 + 0.5*a32 + 0.5*a34)*(b12 + b22 + b26 - b36 + b46)*(- c43 + c63)
(a11 - a12 - a14 - a33 - a34)*(-0.5*b12 + 0.5*b22 - 0.5*b23 - 0.5*b33 - 0.5*b43)*(- c21 + c23 + c33)
(-0.5*a11 + 0.5*a12 - 0.5*a14 + 0.5*a21 - 0.5*a22 + 0.5*a24)*(- b11 + b13 + b21 + b33 + b43)*(- c31)
(- a21 + a22 + a23)*(- b34 - b36)*(- c41 - c42 - c52)
(0.5*a11 + 0.5*a12 - 0.5*a13 - 0.5*a21 + 0.5*a22 + 0.5*a23)*(- b24 + b34 + 2.0*b36 + b44)*(- c41 - c42 + c62)
(-0.5*a31 - 0.5*a32 + 0.5*a33)*(b12 + b22)*(- c22 - c23 - c43 + c63)
(- a31 - a32 + a34)*(- b16 - b36 + b46)*(0.5*c62 - 0.5*c13 - 0.5*c53 + 0.5*c63)
(-0.5*a21 - 0.5*a22 - 0.5*a24 + 0.5*a31 + 0.5*a32 - 0.5*a33)*(b21 + b22 - b23 - b25 - b31 + b32 - b33 + b35 - b41 + b42 - b43 + b45)*(- c22 + c13)
(0.5*a11 + 0.5*a12 - 0.5*a14 + 0.5*a21 - 0.5*a22 + 0.5*a24)*(- b11 + b13 + b21 + b23)*(c31 - c12 - c52)
(a31 - a32 - a33)*(b11 - b15 - b21 + b25)*(0.5*c51 - 0.5*c43 - 0.5*c53)
(0.5*a33 - 0.5*a34)*(b25 - b35 + b45)*(- c52 - c23 - c33 - c53)
(-0.5*a13 + 0.5*a14 - 0.5*a21 + 0.5*a22 + 0.5*a23)*(b14 - b23 - b33 + b34 - b43 - b44)*(- c41 - c22 - c32)
(a21 - 0.5*a31 - 0.5*a32 + 0.5*a34)*(- b14 - b16 + b22 - b23 + b32 - b33 - b34 - b36 - b42 + b43 - b44 - b46)*(- c62 + c33)
(a11 + a12 - a13)*(- b36)*(- c21 - c41 + c61 - c42 + c62)
(- a11 + a12 + a14 - a31 + a32 + a33)*(b22 + b25 + b32 - b35 - b42 + b45)*(0.5*c51 + 0.5*c23 + 0.5*c33)
(a11 - a12 - a13 - a21 + a22 + a23)*(b14 - b23 - b24 - b33 - b43)*(0.5*c41)
(0.5*a11 + 0.5*a12 - 0.5*a14)*(- b25 + b35 + b45)*(- c11 - c51 + c61 - c12 - c52)
(-0.5*a11 - 0.5*a12 - 0.5*a14)*(- b14 - b34 - b44)*(- c11 + c41 - c61 - c43 + c63)
(a13 - a14)*(0.5*b22 + 0.5*b32 - 0.5*b42)*(c21 + c31 + c51 + c22 + c32)
(a23 - a24 - a33 + a34)*(0.5*b21 - 0.5*b25 + 0.5*b31 + b34 - 0.5*b35 + b36 - 0.5*b41 + 0.5*b45)*(- c52)
(0.5*a11 - 0.5*a12 - 0.5*a14)*(- b23 - b33 - b43)*(c21 + c31 - c41 - c23 - c33)
(-0.5*a21 + 0.5*a22 + 0.5*a24 + 0.5*a31 - 0.5*a32 - 0.5*a34)*(b11 - b15 - b21 - b24 + b25 - b26 - b34 - b36 - b44 - b46)*(c43)
(- a11)*(- b11 + b21)*(c11 + c31 + c51 - c13 - c53)
(a21 + a22 - a23 - a31 - a32 + a33)*(-0.5*b21 + 0.5*b25 + 0.5*b31 - b32 + b33 - 0.5*b35 + 0.5*b41 - 0.5*b45)*(c22)
(-0.5*a13 + 0.5*a14 + 0.5*a23 - 0.5*a24)*(- b14 + b23 - b33 - b34 + b43 + b44)*(- c22 - c32)
(-0.5*a21 - 0.5*a22 + 0.5*a24 + 0.5*a31 + 0.5*a32 - 0.5*a34)*(b22 - b23 + b24 + b26 + b32 - b33 - b34 - b36 - b42 + b43 - b44 - b46)*(- c62)
(0.5*a13 - 0.5*a14 + 0.5*a21 - 0.5*a22 + 0.5*a24)*(- b22 - b32 + 2.0*b33 + b42)*(c31 + c22 + c32)
(a23 + a24)*(- b21 + b25 + b31 - b35 + b41 - b45)*(0.5*c11 + 0.5*c12 + 0.5*c22)
(- a21 + a22 - a24)*(-0.5*b22 + 0.5*b23 - 0.5*b32 + 0.5*b33 + 0.5*b42 - 0.5*b43)*(c31 + c32 + c62)
(-0.5*a21 + 0.5*a22 + 0.5*a24 + 0.5*a31 + 0.5*a32 - 0.5*a34)*(- b14 - b24 - b26 + b36 - b46)*(- c62 - c43)
(a31 - a32 + a34)*(0.5*b14 + 0.5*b16 + 0.5*b34 + 0.5*b36 + 0.5*b44 + 0.5*b46)*(- c61 + c33 + c63)
(0.5*a13 + 0.5*a14 - 0.5*a23 - 0.5*a24)*(- b14 - b21 - b31 - b34 - b41 - b44)*(- c11)
(a11 - a12 - a13 + a31 - a32 - a33)*(-0.5*b22 - 0.5*b32 + b35 + 0.5*b42)*(- c51)
(a33 + a34)*(b22 - b23 + b32 - b33 + b42 - b43)*(-0.5*c21 + 0.5*c13 + 0.5*c23)
(0.5*a11 + 0.5*a12 - 0.5*a13 + 0.5*a23 + 0.5*a24)*(b14 + b21 - b31 + b34 + b41 + b44)*(c11 + c42 - c62)
(- a11 - a31)*(b15 + b16 + b25 + b36 - b46)*(- c13 - c53)
(a11 + 0.5*a31 - 0.5*a32 + 0.5*a34)*(- b16 - b25 + b35 - b36 + b45 + b46)*(- c61 + c13 + c53)
(- a11 - a12 + a14 + a21 + a22 - a24)*(b11 - b13 - b23 + b31 - b41)*(0.5*c12 + 0.5*c52)
(0.5*a21 + 0.5*a22 + 0.5*a24)*(- b21 + b31 - b41)*(- c12 + c42 - c62 - c13)
(a11 + a12 + a14 + a33 + a34)*(0.5*b12 + 0.5*b22 - b36)*(c21 + c43 - c63)
(- a21)*(- b13 - b23)*(c12 + c32 + c52 + c33)
(- a11 - 0.5*a31 + 0.5*a32 + 0.5*a33)*(- b11 + b15 + b21 + b35 + b45)*(- c51 + c13 + c53)

# end of file 's3x4x6_54.tensor.txt', lines: 66

