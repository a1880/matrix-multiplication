#
# Yacas script 's2x4x8_51.yacas.txt' created 23-May-2025 23:55:30
#
# Matrix multiplication method for 2x4x8_51
#
# Intermediate products: 51
#
P01 := (- a11 - a21) * (- b12 - b17 - b18);
P02 := (- a22 - a23 + a24) * (b24 - b26 - b31 + b35 + b45);
P03 := (- a14 - a22 + a23) * (- b13 - b23 + b37 - b43);
P04 := (a11 + a21) * (b11 - b15);
P05 := (- a24) * (b14 - b26 - b31 + b34 + b35 + b44 + b45);
P06 := (- a21 + a24) * (b14 - b26 + b36 + b41 + b46);
P07 := (a23 - a24) * (- b24 + b26 + b34 - b36);
P08 := (a11 - a13) * (- b12 + b27 + b28 + b37);
P09 := (- a12 - a13 + a14) * (b31 - b35);
P10 := (- a14 - a24) * (b47 + b48);
P11 := (- a21 + a23) * (- b27 - b28 - b37 - b38);
P12 := a13 * (- b12 - b22 - b32);
P13 := (- a13 + a14 - a23 + a24) * (- b13 + b22 - b23 + b27 + b28 + b37 + b42 - b43 - b44 - b45);
P14 := (- a11 + a12) * (- b28);
P15 := (- a21 + a24) * (- b13 + b27 + b37 - b48);
P16 := (a22 - a24) * (- b23 - b27 - b33 - b37);
P17 := (a11 - a13 + a21 - a23) * (- b14);
P18 := (- a21) * (- b11 - b16 + b21 + b26 - b31 - b36 - b41 - b46);
P19 := a14 * (b13 + b17 + b23 + b27 + b43 + b47);
P20 := (a11 - a12 - a22 + a23) * (b27 + b28 + b37);
P21 := (a11 - a13 - a22 - a23) * (b26 + b31);
P22 := (a12 - a23 + a24) * (- b24 + b26 + b31 - b35);
P23 := (- a12 - a13 - a22 - a23) * b26;
P24 := (- a11 + a12 + a22 - a24) * (b13 - b27 - b37);
P25 := (a14 + a21) * (- b16 + b26 - b36 - b41 - b46);
P26 := (a21 + a22) * (- b21 + b31);
P27 := (a22 + a23) * (- b35 - b45);
P28 := (- a22 + a23) * (b13 + b23 - b27 - b28 - b37 + b43);
P29 := (a14 + a21) * (b17 + b27 + b37 - b48);
P30 := (a11 - a13) * (- b31 - b36);
P31 := (- a12 + a13 - a22 + a23) * (- b37);
P32 := (a12 - a14 + a22 - a24) * (- b13 + b22 - b23 + b27 + b28 + b37);
P33 := (a11 + a12) * (- b15 - b26 - b31);
P34 := (- a13 - a23 + a24) * (b13 + b14 - b22 + b23 - b26 - b27 - b28 - b31 + b34 + b35 - b37 - b42 + b43 + b44 + b45);
P35 := (a13 + a23) * (b13 + b14 - b22 + b23 - b26 - b27 - b28 - b31 - b32 + b33 + b34 + b35 - b37 - b38 - b42 + b43 + b44 + b45);
P36 := (- a13 - a21) * (b12 - b27 - b28 - b37 - b38);
P37 := (a14 + a22 + a23) * (b31 - b35 - b45);
P38 := a12 * (b15 - b25 + b35);
P39 := (a12 - a13 - a14) * (b22 + b27 + b28);
P40 := (- a11 + a12 - a21 + a22) * b13;
P41 := (a11 - a13 - a23 + a24) * (b14 - b26 + b36);
P42 := (- a14) * (b16 - b26 - b31 + b35 + b36 + b45 + b46);
P43 := (- a13 - a22 + a24) * (b22 + b27 + b28 + b33 + b37);
P44 := (- a14 - a24) * (- b41);
P45 := (a12 + a22) * (b21 - b24 - b25 + b26);
P46 := (- a21) * (b18 + b28 + b38 + b48);
P47 := a14 * (b13 - b22 + b23 - b27 - b28 - b37 - b42 + b43);
P48 := (a11 - a14) * (b17 + b27 + b37);
P49 := (- a22 + a23 + a24) * (- b13 - b23 - b33 - b43);
P50 := (a11 - a14) * (- b16 + b26 - b36);
P51 := (- a12 + a21) * (- b15 + b21 - b31);

c11 :=                   P04                                                                               - P18             - P21       + P23       - P25       + P27                               - P33                   - P37                         + P42                                                 - P51;
c12 :=             P03                         - P08                   - P12                                           + P20                                           + P28             + P31                                           + P39                                           - P47;
c13 :=             P03                                                             - P14       + P16                   + P20                   - P24                   + P28             + P31 - P32                                     + P39                   - P43;
c14 :=                                   - P07       - P09                   - P13                                           + P21 - P22 - P23                   - P27             + P30                   - P34             + P37                   + P41                               - P47;
c15 :=                                                 P09                                                                   - P21       + P23                   + P27                               - P33                   - P37 - P38;
c16 :=                                                                                                                         P21       - P23                   - P27             + P30                                     + P37                         - P42                                           - P50;
c17 :=           - P03                                                             + P14                         + P19 - P20                                           - P28             - P31                                                                                                 + P48;
c18 := P01                                     + P08                               - P14                                                                                     - P29                                     + P36                                                       + P46       - P48;
c21 :=                                                                                                       P18                                     + P25 - P26 - P27                                                       + P37                         - P42       + P44;
c22 :=                       - P05                               + P11 + P12                                                                                           - P28                               - P34 - P35 - P36                                     - P43                               - P49;
c23 :=                                                                               P14       - P16                   - P20                   + P24                   - P28                                                                   - P40                                                 - P49;
c24 :=     - P02             - P05       + P07                                                       - P17                   - P21                               + P27             - P30                                                             - P41;
c25 :=       P02                                                                                                                   + P22                   - P26 - P27                                                             + P38                                     - P45                               - P51;
c26 :=                               P06                                                             - P17                   - P21                   - P25       + P27             - P30                                     - P37                   - P41 + P42       - P44;
c27 :=             P03                                     - P10                   - P14 + P15                   - P19 + P20                   - P24                   + P28 + P29                                                             + P40;
c28 :=                                                           - P11             + P14 - P15                         - P20                   + P24                                                                                           - P40                               - P46;

# Solution statistics:
# ====================
#
#                        [a]        [b]        [c]      total
# --------------------------------------------------------------
# operands                123        216        133        472
# + operands               36         82         35        153
# - operands               36         83         47        166
# term length          1 .. 4    1 .. 18     1 .. 8    1 .. 18
# terms with 1 op           8          6          9         23

#
# Non-zero triples (= products of three coefficients != 0)
# ----------------------------------------------------------
# (equations are 'odd' for (a_row == c_row) && (a_col == b_row) && (b_col == c_col))
#
# Total number of equations      4,096
# Odd triples per equation       1, 3
# Odd equations                  64
# Odd equations with 1 triple    60
# Even triples per equation      0, 2, 4, 6, 8
# Even equations                 4,032
# Even equations with 0 triples  3,535
# Odd triples per product        1, 2, 3, 4
# Even triples per product       3 .. 88
# Products with 1 odd triple     35
#
Simplify(c11 - (a11*b11 + a12*b21 + a13*b31 + a14*b41));
Simplify(c12 - (a11*b12 + a12*b22 + a13*b32 + a14*b42));
Simplify(c13 - (a11*b13 + a12*b23 + a13*b33 + a14*b43));
Simplify(c14 - (a11*b14 + a12*b24 + a13*b34 + a14*b44));
Simplify(c15 - (a11*b15 + a12*b25 + a13*b35 + a14*b45));
Simplify(c16 - (a11*b16 + a12*b26 + a13*b36 + a14*b46));
Simplify(c17 - (a11*b17 + a12*b27 + a13*b37 + a14*b47));
Simplify(c18 - (a11*b18 + a12*b28 + a13*b38 + a14*b48));
Simplify(c21 - (a21*b11 + a22*b21 + a23*b31 + a24*b41));
Simplify(c22 - (a21*b12 + a22*b22 + a23*b32 + a24*b42));
Simplify(c23 - (a21*b13 + a22*b23 + a23*b33 + a24*b43));
Simplify(c24 - (a21*b14 + a22*b24 + a23*b34 + a24*b44));
Simplify(c25 - (a21*b15 + a22*b25 + a23*b35 + a24*b45));
Simplify(c26 - (a21*b16 + a22*b26 + a23*b36 + a24*b46));
Simplify(c27 - (a21*b17 + a22*b27 + a23*b37 + a24*b47));
Simplify(c28 - (a21*b18 + a22*b28 + a23*b38 + a24*b48));

# Brent equation statistics about non-zero triples:
# in odd equations  [1, 3]
# in even equations [0, 2, 4, 6, 8]
# in kernel columns [1, 2, 3, 4]

# Algorithm properly fulfills all Brent Equations

#
# End of 2x4x8_51 solution file 's2x4x8_51.yacas.txt'
#
